<?php
/**
 * THIS FILE IS AUTO-GENERATED BY LAZYRECORD,
 * PLEASE DO NOT MODIFY THIS FILE DIRECTLY.
 * 
 * Last Modified: April 17th at 3:53pm
 */
namespace PM25\Model;


use LazyRecord;
use LazyRecord\Schema\RuntimeSchema;
use LazyRecord\Schema\Relationship;

class StationSchemaProxy extends RuntimeSchema
{

    public static $column_names = array (
  0 => 'id',
  1 => 'country',
  2 => 'country_en',
  3 => 'city',
  4 => 'city_en',
  5 => 'county',
  6 => 'county_en',
  7 => 'province',
  8 => 'province_en',
  9 => 'name',
  10 => 'name_en',
  11 => 'address',
  12 => 'address_en',
  13 => 'area',
  14 => 'area_en',
  15 => 'longitude',
  16 => 'latitude',
  17 => 'rawdata',
  18 => 'location',
  19 => 'support_uv',
  20 => 'support_air',
  21 => 'remark',
  22 => 'code',
  23 => 'data_source',
);
    public static $column_hash = array (
  'id' => 1,
  'country' => 1,
  'country_en' => 1,
  'city' => 1,
  'city_en' => 1,
  'county' => 1,
  'county_en' => 1,
  'province' => 1,
  'province_en' => 1,
  'name' => 1,
  'name_en' => 1,
  'address' => 1,
  'address_en' => 1,
  'area' => 1,
  'area_en' => 1,
  'longitude' => 1,
  'latitude' => 1,
  'rawdata' => 1,
  'location' => 1,
  'support_uv' => 1,
  'support_air' => 1,
  'remark' => 1,
  'code' => 1,
  'data_source' => 1,
);
    public static $mixin_classes = array (
);
    public static $column_names_include_virtual = array (
  0 => 'id',
  1 => 'country',
  2 => 'country_en',
  3 => 'city',
  4 => 'city_en',
  5 => 'county',
  6 => 'county_en',
  7 => 'province',
  8 => 'province_en',
  9 => 'name',
  10 => 'name_en',
  11 => 'address',
  12 => 'address_en',
  13 => 'area',
  14 => 'area_en',
  15 => 'longitude',
  16 => 'latitude',
  17 => 'rawdata',
  18 => 'location',
  19 => 'support_uv',
  20 => 'support_air',
  21 => 'remark',
  22 => 'code',
  23 => 'data_source',
);

    const schema_class = 'PM25\\Model\\StationSchema';
    const collection_class = 'PM25\\Model\\StationCollection';
    const model_class = 'PM25\\Model\\Station';
    const model_name = 'Station';
    const model_namespace = 'PM25\\Model';
    const primary_key = 'id';
    const table = 'stations';
    const label = 'Station';

    public function __construct()
    {
        /** columns might have closure, so it can not be const */
        $this->columnData      = array( 
  'id' => array( 
      'name' => 'id',
      'attributes' => array( 
          'isa' => 'int',
          'type' => 'mediumint',
          'primary' => true,
          'autoIncrement' => true,
        ),
    ),
  'country' => array( 
      'name' => 'country',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'country_en' => array( 
      'name' => 'country_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'city' => array( 
      'name' => 'city',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'city_en' => array( 
      'name' => 'city_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'county' => array( 
      'name' => 'county',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'county_en' => array( 
      'name' => 'county_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'province' => array( 
      'name' => 'province',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'province_en' => array( 
      'name' => 'province_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'name' => array( 
      'name' => 'name',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'name_en' => array( 
      'name' => 'name_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'address' => array( 
      'name' => 'address',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'address_en' => array( 
      'name' => 'address_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 120,
        ),
    ),
  'area' => array( 
      'name' => 'area',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'area_en' => array( 
      'name' => 'area_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'longitude' => array( 
      'name' => 'longitude',
      'attributes' => array( 
          'isa' => 'double',
          'type' => 'double',
          'primary' => NULL,
        ),
    ),
  'latitude' => array( 
      'name' => 'latitude',
      'attributes' => array( 
          'isa' => 'double',
          'type' => 'double',
          'primary' => NULL,
        ),
    ),
  'rawdata' => array( 
      'name' => 'rawdata',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'text',
          'primary' => NULL,
        ),
    ),
  'location' => array( 
      'name' => 'location',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'point',
          'primary' => NULL,
        ),
    ),
  'support_uv' => array( 
      'name' => 'support_uv',
      'attributes' => array( 
          'isa' => 'bool',
          'type' => 'boolean',
          'primary' => NULL,
        ),
    ),
  'support_air' => array( 
      'name' => 'support_air',
      'attributes' => array( 
          'isa' => 'bool',
          'type' => 'boolean',
          'primary' => NULL,
        ),
    ),
  'remark' => array( 
      'name' => 'remark',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'text',
          'primary' => NULL,
        ),
    ),
  'code' => array( 
      'name' => 'code',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 32,
        ),
    ),
  'data_source' => array( 
      'name' => 'data_source',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 64,
        ),
    ),
);
        $this->columnNames     = array( 
  'id',
  'country',
  'country_en',
  'city',
  'city_en',
  'county',
  'county_en',
  'province',
  'province_en',
  'name',
  'name_en',
  'address',
  'address_en',
  'area',
  'area_en',
  'longitude',
  'latitude',
  'rawdata',
  'location',
  'support_uv',
  'support_air',
  'remark',
  'code',
  'data_source',
);
        $this->primaryKey      = 'id';
        $this->table           = 'stations';
        $this->modelClass      = 'PM25\\Model\\Station';
        $this->collectionClass = 'PM25\\Model\\StationCollection';
        $this->label           = 'Station';
        $this->relations       = array( 
  'station_measure_attributes' => \LazyRecord\Schema\Relationship::__set_state(array( 
  'data' => array( 
      'type' => 1,
      'self_column' => 'id',
      'self_schema' => 'PM25\\Model\\StationSchema',
      'foreign_column' => 'station_id',
      'foreign_schema' => 'PM25\\Model\\StationMeasureAttributeSchema',
    ),
  'accessor' => 'station_measure_attributes',
  'where' => NULL,
  'orderBy' => array( 
    ),
)),
  'measure_attributes' => \LazyRecord\Schema\Relationship::__set_state(array( 
  'data' => array( 
      'type' => 4,
      'relation_junction' => 'station_measure_attributes',
      'relation_foreign' => 'attribute',
    ),
  'accessor' => 'measure_attributes',
  'where' => NULL,
  'orderBy' => array( 
    ),
)),
  'measurements' => \LazyRecord\Schema\Relationship::__set_state(array( 
  'data' => array( 
      'type' => 1,
      'self_column' => 'id',
      'self_schema' => 'PM25\\Model\\StationSchema',
      'foreign_column' => 'station_id',
      'foreign_schema' => 'PM25\\Model\\MeasureSchema',
    ),
  'accessor' => 'measurements',
  'where' => NULL,
  'orderBy' => array( 
      array( 
          'published_at',
          'DESC',
        ),
    ),
)),
);
        $this->readSourceId    = 'default';
        $this->writeSourceId    = 'default';
        parent::__construct();
    }


    /**
     * Code block for message id parser.
     */
    private function __() {
        _('Station');
    }

}
